# TODO - add volume for db
# TODO - move envs to env file
services:
  arcs-db:
    container_name: arcs-db
    image: docker.arvancloud.ir/bitnami/postgresql:17.5.0
#    image: bitnami/postgresql:17.5.0
    restart: unless-stopped
    environment:
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: pass
      POSTGRESQL_DATABASE: arcs
      POSTGRESQL_TIMEZONE: Asia/Tehran
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d arcs" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: docker.arvancloud.ir/bitnami/redis:8.0.2
#    image: bitnami/redis:8.0.2
    container_name: arcs-redis
    hostname: redis
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: pass
      ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
#    image: nats:2.11.6-alpine3.22
    image: docker.arvancloud.ir/nats:2.11.6-alpine3.22
    container_name: arcs-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: >
      -js --http_port 8222
    healthcheck:
      test: [ "CMD", "sh", "-c", "nc -z localhost 4222 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  manager:
    build:
      context: .
      dockerfile: Dockerfile.manager
    container_name: arcs-manager
    restart: unless-stopped
    ports:
      - "8088:8088"
    depends_on:
      arcs-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - /home/mahdi/Projects/Arcs/config.yaml:/config/config.yaml
    healthcheck:
      test: wget -qO- http://localhost:8088/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: arcs-worker
    restart: unless-stopped
    depends_on:
      arcs-db:
        condition: service_healthy
      nats:
        condition: service_started
      manager:
        condition: service_healthy
    volumes:
      - /home/mahdi/Projects/Arcs/worker-config.yaml:/config/worker-config.yaml